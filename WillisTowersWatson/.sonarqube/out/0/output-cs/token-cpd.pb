÷	
ZC:\Users\alann\Documents\WillisTowersWatson\WillisTowersWatson\WillisTowersWatson\Claim.cs
	namespace 	
WillisTowersWatson
 
{ 
class		 	
Claim		
 
{

 
public 
int 

OriginYear 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
DevelopmentYear "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
float 
Payment 
{ 
get "
;" #
set$ '
;' (
}) *
public 
Claim 
( 
int 
origin 
,  
int! $
year% )
,) *
float+ 0
payment1 8
)8 9
{ 	
this 
. 

OriginYear 
= 
origin $
;$ %
this 
. 
DevelopmentYear  
=! "
year# '
;' (
this 
. 
Payment 
= 
payment "
;" #
} 	
} 
} ¬y
eC:\Users\alann\Documents\WillisTowersWatson\WillisTowersWatson\WillisTowersWatson\InsuranceCompany.cs
	namespace 	
WillisTowersWatson
 
{		 
class

 	
InsuranceCompany


 
{ 
public 
String 
CompanyName !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 

Dictionary 
< 
String  
,  !
InsurancePolicy" 1
>1 2
Policies3 ;
{< =
get> A
;A B
setC F
;F G
}H I
public 
InsuranceCompany 
(  
String  &
name' +
)+ ,
{ 	
this 
. 
Policies 
= 
new 

Dictionary  *
<* +
string+ 1
,1 2
InsurancePolicy3 B
>B C
(C D
)D E
;E F
this 
. 
CompanyName 
= 
name #
;# $
} 	
public 
void %
outputAccumulatedPayments -
(- .
String. 4
fileName5 =
,= >
String? E
outFileNameF Q
)Q R
{ 	
String 
workingDirectory #
=$ %
Environment& 1
.1 2
CurrentDirectory2 B
;B C
String 
path 
= 
	Directory #
.# $
	GetParent$ -
(- .
workingDirectory. >
)> ?
.? @
Parent@ F
.F G
FullNameG O
+P Q
$strR V
+W X
fileNameY a
;a b
String 
outPath 
= 
	Directory &
.& '
	GetParent' 0
(0 1
workingDirectory1 A
)A B
.B C
ParentC I
.I J
FullNameJ R
+S T
$strU Y
+Z [
outFileName\ g
;g h
List 
< 
String 
> 
txt 
= 
this #
.# $
readTxtFile$ /
(/ 0
fileName0 8
,8 9
path9 =
)= >
;> ?
this 
. 
convertToPolicy  
(  !
txt! $
)$ %
;% &
String 
output 
= 
$str 
; 
int"" 
lowYeaer"" 
="" 
this"" 
.""  
getLowestYear""  -
(""- .
Policies"". 6
)""6 7
;""7 8
int## 
claimsRange## 
=## 
this## "
.##" #
getYearRange### /
(##/ 0
Policies##0 8
)##8 9
;##9 :
output$$ 
+=$$ 
lowYeaer$$ 
+$$  
$str$$! %
+$$& '
claimsRange$$( 3
+$$4 5
$str$$6 :
;$$: ;

Dictionary'' 
<'' 
String'' 
,'' 
String''  &
>''& '
accumulatedData''( 7
=''8 9
this'': >
.''> ?(
calculateAccumulatedPayments''? [
(''[ \
)''\ ]
;''] ^
foreach(( 
((( 
KeyValuePair(( !
<((! "
String((" (
,((( )
String((* 0
>((0 1
policy((2 8
in((9 ;
accumulatedData((< K
)((K L
{)) 
output** 
+=** 
policy**  
.**  !
Key**! $
+**% &
$str**' *
+**+ ,
policy**- 3
.**3 4
Value**4 9
+**: ;
$str**< @
;**@ A
}++ 
Console-- 
.-- 
	WriteLine-- 
(-- 
output-- $
)--$ %
;--% &
writeToFile.. 
(.. 
output.. 
,.. 
outPath..  '
)..' (
;..( )
}// 	
private11 
void11 
convertToPolicy11 $
(11$ %
List11% )
<11) *
String11* 0
>110 1
txt112 5
)115 6
{22 	
foreach33 
(33 
String33 
line33  
in33! #
txt33$ '
)33' (
{44 
var55 
	lineSplit55 
=55 
line55  $
.55$ %
Split55% *
(55* +
$char55+ .
)55. /
;55/ 0
String77 
policy77 
=77 
	lineSplit77  )
[77) *
$num77* +
]77+ ,
;77, -
if88 
(88 
!88 
Policies88 
.88 
ContainsKey88 )
(88) *
policy88* 0
)880 1
)881 2
{99 
Policies:: 
.:: 
Add::  
(::  !
policy::! '
,::' (
new::) ,
InsurancePolicy::- <
(::< =
policy::= C
)::C D
)::D E
;::E F
};; 
int== 
origin== 
=== 
int==  
.==  !
Parse==! &
(==& '
	lineSplit==' 0
[==0 1
$num==1 2
]==2 3
)==3 4
;==4 5
int>> 
year>> 
=>> 
int>> 
.>> 
Parse>> $
(>>$ %
	lineSplit>>% .
[>>. /
$num>>/ 0
]>>0 1
)>>1 2
;>>2 3
float?? 
payment?? 
=?? 
float??  %
.??% &
Parse??& +
(??+ ,
	lineSplit??, 5
[??5 6
$num??6 7
]??7 8
)??8 9
;??9 :
PoliciesAA 
[AA 
policyAA 
]AA  
.AA  !
createClaimAA! ,
(AA, -
originAA- 3
,AA3 4
yearAA5 9
,AA9 :
paymentAA; B
)AAB C
;AAC D
}BB 
}CC 	
privateFF 
ListFF 
<FF 
StringFF 
>FF 
readTxtFileFF (
(FF( )
StringFF) /
fileNameFF0 8
,FF8 9
StringFF: @
pathFFA E
)FFE F
{GG 	
ListHH 
<HH 
StringHH 
>HH 
txtHH 
=HH 
newHH "
ListHH# '
<HH' (
stringHH( .
>HH. /
(HH/ 0
)HH0 1
;HH1 2
tryJJ 
{KK 
StreamReaderMM 
srMM 
=MM  !
newMM" %
StreamReaderMM& 2
(MM2 3
pathMM3 7
)MM7 8
;MM8 9
StringOO 
lineOO 
=OO 
srOO  
.OO  !
ReadLineOO! )
(OO) *
)OO* +
;OO+ ,
linePP 
=PP 
srPP 
.PP 
ReadLinePP "
(PP" #
)PP# $
;PP$ %
whileRR 
(RR 
lineRR 
!=RR 
nullRR #
)RR# $
{SS 
txtTT 
.TT 
AddTT 
(TT 
lineTT  
)TT  !
;TT! "
lineUU 
=UU 
srUU 
.UU 
ReadLineUU &
(UU& '
)UU' (
;UU( )
}VV 
srXX 
.XX 
CloseXX 
(XX 
)XX 
;XX 
}YY 
catchZZ 
(ZZ 
	ExceptionZZ 
eZZ 
)ZZ 
{[[ 
Console\\ 
.\\ 
	WriteLine\\ !
(\\! "
$str\\" /
+\\0 1
e\\2 3
.\\3 4
Message\\4 ;
)\\; <
;\\< =
}]] 
return__ 
txt__ 
;__ 
}`` 	
privatebb 
voidbb 
writeToFilebb  
(bb  !
Stringbb! '
txtbb( +
,bb+ ,
Stringbb- 3
pathbb4 8
)bb8 9
{cc 	
trydd 
{ee 
StreamWriterff 
swff 
=ff  !
newff" %
StreamWriterff& 2
(ff2 3
pathff3 7
)ff7 8
;ff8 9
swgg 
.gg 
Writegg 
(gg 
txtgg 
)gg 
;gg 
swhh 
.hh 
Closehh 
(hh 
)hh 
;hh 
}ii 
catchjj 
(jj 
	Exceptionjj 
ejj 
)jj 
{kk 
Consolell 
.ll 
	WriteLinell !
(ll! "
$strll" /
+ll0 1
ell2 3
.ll3 4
Messagell4 ;
)ll; <
;ll< =
}mm 
}oo 	
privateqq 

Dictionaryqq 
<qq 
Stringqq !
,qq! "
Stringqq# )
>qq) *(
calculateAccumulatedPaymentsqq+ G
(qqG H
)qqH I
{rr 	

Dictionaryss 
<ss 
Stringss 
,ss 
Stringss %
>ss% &
dReturnss' .
=ss/ 0
newss1 4

Dictionaryss5 ?
<ss? @
Stringss@ F
,ssF G
StringssG M
>ssM N
(ssN O
)ssO P
;ssP Q
foreachuu 
(uu 
KeyValuePairuu !
<uu! "
stringuu" (
,uu( )
InsurancePolicyuu* 9
>uu9 :
policyuu; A
inuuB D
PoliciesuuE M
)uuM N
{vv 
policyxx 
.xx 
Valuexx 
.xx 
Claimsxx #
.xx# $
OrderByxx$ +
(xx+ ,
axx, -
=>xx. 0
axx1 2
.xx2 3

OriginYearxx3 =
)xx= >
.xx> ?
ThenByxx? E
(xxE F
axxF G
=>xxH J
axxK L
.xxL M
DevelopmentYearxxM \
)xx\ ]
;xx] ^
float{{ 
value{{ 
={{ 
$num{{ 
;{{  
int|| 
year|| 
=|| 
policy|| !
.||! "
Value||" '
.||' (
Claims||( .
[||. /
$num||/ 0
]||0 1
.||1 2

OriginYear||2 <
;||< =
int}} 
devYear}} 
=}} 
year}} "
;}}" #
String~~ 
outStr~~ 
=~~ 
$str~~  "
;~~" #
foreach
 
(
 
Claim
 
claim
 $
in
% '
policy
( .
.
. /
Value
/ 4
.
4 5
Claims
5 ;
)
; <
{
 
if
 
(
 
claim
 
.
 

OriginYear
 (
!=
) +
year
, 0
)
0 1
{
 
value
 
=
 
$num
  !
;
! "
year
 
=
 
claim
 $
.
$ %

OriginYear
% /
;
/ 0
devYear
 
=
  !
year
" &
;
& '
}
 
int
 
devDiff
 
=
  !
(
" #
claim
# (
.
( )
DevelopmentYear
) 8
-
9 :
devYear
; B
)
B C
-
D E
$num
F G
;
G H
for
 
(
 
int
 
i
 
=
  
$num
! "
;
" #
i
$ %
<
& '
devDiff
( /
;
/ 0
i
1 2
++
2 4
)
4 5
{
 
devYear
 
+=
  "
$num
# $
;
$ %
outStr
 
+=
 !
value
" '
+
( )
$str
* -
;
- .
}
 
value
 
+=
 
claim
 "
.
" #
Payment
# *
;
* +
outStr
 
+=
 
value
 #
+
$ %
$str
& )
;
) *
}
 
dReturn
 
[
 
policy
 
.
 
Key
 "
]
" #
=
$ %
outStr
& ,
;
, -
}
 
return
 
dReturn
 
;
 
}
 	
private
 
int
 
getLowestYear
 !
(
! "

Dictionary
" ,
<
, -
string
- 3
,
3 4
InsurancePolicy
5 D
>
D E
Policies
F N
)
N O
{
 	
int
 

lowestYear
 
=
 
int
  
.
  !
MaxValue
! )
;
) *
foreach
 
(
 
KeyValuePair
 !
<
! "
string
" (
,
( )
InsurancePolicy
* 9
>
9 :
policy
; A
in
B D
Policies
E M
)
M N
{
 
foreach
 
(
 
Claim
 
claim
 $
in
% '
policy
( .
.
. /
Value
/ 4
.
4 5
Claims
5 ;
)
; <
{
 
if
¡¡ 
(
¡¡ 
claim
¡¡ 
.
¡¡ 

OriginYear
¡¡ (
<
¡¡) *

lowestYear
¡¡+ 5
)
¡¡5 6
{
¢¢ 

lowestYear
££ "
=
££# $
claim
££% *
.
££* +

OriginYear
££+ 5
;
££5 6
}
¤¤ 
}
¥¥ 
}
¦¦ 
return
§§ 

lowestYear
§§ 
;
§§ 
}
¨¨ 	
private
ªª 
int
ªª 
getYearRange
ªª  
(
ªª  !

Dictionary
ªª! +
<
ªª+ ,
string
ªª, 2
,
ªª2 3
InsurancePolicy
ªª4 C
>
ªªC D
Policies
ªªE M
)
ªªM N
{
«« 	
int
¬¬ 
	rangeYear
¬¬ 
=
¬¬ 
$num
¬¬ 
;
¬¬ 
foreach
­­ 
(
­­ 
KeyValuePair
­­ !
<
­­! "
string
­­" (
,
­­( )
InsurancePolicy
­­* 9
>
­­9 :
policy
­­; A
in
­­B D
Policies
­­E M
)
­­M N
{
®® 
foreach
¯¯ 
(
¯¯ 
Claim
¯¯ 
claim
¯¯ $
in
¯¯% '
policy
¯¯( .
.
¯¯. /
Value
¯¯/ 4
.
¯¯4 5
Claims
¯¯5 ;
)
¯¯; <
{
°° 
int
²² 
diff
²² 
=
²² 
(
²²  
claim
²²  %
.
²²% &
DevelopmentYear
²²& 5
-
²²6 7
claim
²²8 =
.
²²= >

OriginYear
²²> H
)
²²H I
+
²²J K
$num
²²L M
;
²²M N
if
³³ 
(
³³ 
diff
³³ 
>
³³ 
	rangeYear
³³ (
)
³³( )
{
´´ 
	rangeYear
µµ !
=
µµ" #
diff
µµ$ (
;
µµ( )
}
¶¶ 
}
·· 
}
¸¸ 
return
¹¹ 
	rangeYear
¹¹ 
;
¹¹ 
}
ºº 	
}
»» 
}¼¼ Ý
dC:\Users\alann\Documents\WillisTowersWatson\WillisTowersWatson\WillisTowersWatson\InsurancePolicy.cs
	namespace 	
WillisTowersWatson
 
{ 
class		 	
InsurancePolicy		
 
{

 
public 
String 

PolicyName  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
List 
< 
Claim 
> 
Claims !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
InsurancePolicy 
( 
String %

policyName& 0
)0 1
{ 	
this 
. 
Claims 
= 
new 
List "
<" #
Claim# (
>( )
() *
)* +
;+ ,
this 
. 

PolicyName 
= 

policyName (
;( )
} 	
public 
void 
createClaim 
(  
int  #
origin$ *
,* +
int, /
year0 4
,4 5
float6 ;
payment< C
)C D
{ 	
this 
. 
Claims 
. 
Add 
( 
new 
Claim  %
(% &
origin& ,
,, -
year. 2
,2 3
payment4 ;
); <
)< =
;= >
} 	
} 
} ©	
\C:\Users\alann\Documents\WillisTowersWatson\WillisTowersWatson\WillisTowersWatson\Program.cs
	namespace 	
WillisTowersWatson
 
{ 
class		 	
Program		
 
{

 
static 
void 
Main 
( 
string 
[  
]  !
args" &
)& '
{ 	
String 
companyName 
=  
$str! 5
;5 6
InsuranceCompany 
WillisTowersWatson /
=0 1
new2 5
InsuranceCompany6 F
(F G
companyNameG R
)R S
;S T
String 
fileName 
= 
$str *
;* +
String 
outFileName 
=  
$str! 0
;0 1
WillisTowersWatson 
. %
outputAccumulatedPayments 8
(8 9
fileName9 A
,A B
outFileNameB M
)M N
;N O
Console 
. 
ReadLine 
( 
) 
; 
} 	
} 
} 
lC:\Users\alann\Documents\WillisTowersWatson\WillisTowersWatson\WillisTowersWatson\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str -
)- .
]. /
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str 
) 
] 
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str /
)/ 0
]0 1
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[## 
assembly## 	
:##	 

AssemblyVersion## 
(## 
$str## $
)##$ %
]##% &
[$$ 
assembly$$ 	
:$$	 

AssemblyFileVersion$$ 
($$ 
$str$$ (
)$$( )
]$$) *